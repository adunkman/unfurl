name: Pre-deploy

on:
  push:
  pull_request:
    branches: [main]

jobs:
  pre-deploy:
    name: Pre-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build API docker image
        run: docker-compose build api

      - name: Build API
        run: docker-compose run api run build

      - name: Store API Lambda as artifact
        uses: actions/upload-artifact@v2
        with:
          name: API Lambda
          if-no-files-found: error
          path: dist/*.zip

      - name: Run API tests
        run: docker-compose run api test

  plan-deploy:
    name: Plan deploy
    runs-on: ubuntu-latest
    needs: pre-deploy
    if: github.repository_owner == 'adunkman'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore API Lambda artifact
        uses: actions/download-artifact@v2
        with:
          name: API Lambda

      - name: Build terraform docker image
        run: docker-compose build terraform

      - name: Initialize terraform
        run: docker-compose run terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Output terraform plan
        run: docker-compose run terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
